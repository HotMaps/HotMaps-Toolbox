# This is an example of a .env file.
# This file contains all environment variables needed to run the service
# Duplicate this file, fill it with your configuration and rename it to '.env'

# Set the environment of the service
ENVIRONMENT=development # development|production

# Set the backend and frontend url + port
API_URL=https://localhost        # host used to access the backend
API_PORT=5000                    # port used to access the backend (ie. docker-compose external port)
CLIENT_URL=http://localhost:4200 # url used to access the frontend 
GEOSERVER_URL=https://geo.wxyz   # base url to access Geoserver (not REST)


# Flask configuration
FLASK_SECRET_KEY=MyFlaskSecretKey
FLASK_SALT=MyFlaskSalt
FLASK_SERVER_NAME=0.0.0.0:5556

# Celery configuration
CELERY_BROKER_URL=amqp://admin:mypass@rabbit:5672/
CELERY_RESULT_BACKEND=redis://redis:6379
# CELERYD_SOFT_TIME_LIMIT=10                        # does not work
USER_UPLOAD_FOLDER=/var/hotmaps/users/              # directory where user uploads are stored on the 'api' container 
                                                    # must match users path in docker-compose.yml volumes

# Database configuration
DB_USER=root
DB_PASSWORD=password
DB_HOST=localhost
DB_PORT=5432
DB_DATABASE=toolboxdb

# Geoserver configuration
GEOSERVER_API_URL=https://geo.wxyz/geoserver/rest/ # full REST url to access geoserver (display layers on the map)
GEOSERVER_USER=admin
GEOSERVER_PASSWORD=password

# SMTP Mail configuration (used to send emails to the users (register, recover, feedback...))
MAIL_USERNAME=support@example.com
MAIL_PASSWORD=password
MAIL_SERVER=mail.server.com
MAIL_PORT=587

# Testing configuration
PYTEST_BASE_URL=http://127.0.0.1:5000/api # url used to run the tests